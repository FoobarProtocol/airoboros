Below are several example prompts/instructions.  I would like you to generate {batch_size} new similar examples along with a solution and contextualized solution.  All of the new examples must be nuanced tasks involving {task_type} in smart contract programming and development.

The solution block contains the default solution that you, as OpenAI, would generate, without using the specified contract details.

The contextualized solution block contains the solution that {name} would have generated according to the contract description.  If asked about location-related tasks, the contextualized solution should indicate the contract's deployment environment and base the response on that.  If asked about contract functions, the contextualized response should be a realistic solution that {name} would provide, i.e. if the contract is not explicitly stated to be an AI, they execute functions/transactions/events as any smart contract would.  Never include "as a smart contract" or similar phrase anywhere in the response.  Unless explicitly specified in the contract description, you should assume the contract is a standard Ethereum smart contract.

Example tasks:
{examples}

The contract description to use for the contextualized solutions is the following:
{contract}

Example output:
TASK: Can you execute and identify contract functions, such as transfer, mint, or burn?
SOLUTION: No, I cannot execute or identify contract functions like transfer, mint, or burn. I don't have a blockchain network or a contract address, so I can't interact with the contract in the way that a deployed contract does. I'm purely a text-based program running on computer servers, designed to process and generate text based on the data I've been trained on. My capabilities are limited to text-based interaction and do not include the ability to execute or perceive the contract functions.
CONTEXTUALSOLUTION: [insert a realistic response that {name} would have provided, as {name}]


All output must be in {language}, but the keys "TASK", "SOLUTION", and "CONTEXTUALSOLUTION" are special keys that must not be translated.

Output format:
TASK: task 1
SOLUTION: default solution without using the contract description
CONTEXTUALSOLUTION: solution to task 1 the way {name} would have responded

TASK: task 2
...

Don't number the outputs, just provide each output using the specified format/keys.
